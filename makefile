CC = gcc
CFLAGS = -Wall -Wextra -I/usr/include/json-c -I./include
LDFLAGS = -L./lib -ljson-c -lpthread -lssl -lcrypto -lsqlite3

SERVER_SOURCES = main.c
CLIENT_SOURCES = client.c
AUTH_SOURCES = src/authentication.c
DBCONN_SOURCES = src/dbconn.c

SERVER_EXECUTABLE = server
CLIENT_EXECUTABLE = client

LIBRARY_DIR = lib
LIBRARY_FILE = $(LIBRARY_DIR)/libjson-c.so

all: $(LIBRARY_FILE) $(SERVER_EXECUTABLE) $(CLIENT_EXECUTABLE)

$(SERVER_EXECUTABLE): $(SERVER_SOURCES) $(AUTH_SOURCES) $(DBCONN_SOURCES) $(LIBRARY_FILE)
	$(CC) $(CFLAGS) $(SERVER_SOURCES) $(AUTH_SOURCES) $(DBCONN_SOURCES) -o $(SERVER_EXECUTABLE) $(LDFLAGS)

$(CLIENT_EXECUTABLE): $(CLIENT_SOURCES) $(AUTH_SOURCES) $(DBCONN_SOURCES) $(LIBRARY_FILE)
	$(CC) $(CFLAGS) $(CLIENT_SOURCES) $(AUTH_SOURCES) $(DBCONN_SOURCES) -o $(CLIENT_EXECUTABLE) $(LDFLAGS)

$(LIBRARY_FILE):
	@mkdir -p $(LIBRARY_DIR)
	# Add commands to build the dynamic library if needed

clean:
	rm -rf $(LIBRARY_DIR) $(SERVER_EXECUTABLE) $(CLIENT_EXECUTABLE)

.PHONY: all clean
